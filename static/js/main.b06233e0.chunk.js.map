{"version":3,"sources":["components/Stopwatch.js","components/TimeInput.js","components/Countdown.js","themes/theme.js","components/TabView.js","App.js","index.js"],"names":["Stopwatch","props","handleStart","setState","state","startTime","Date","now","elapsedTime","timer","setInterval","isOn","handleStop","clearInterval","handleReset","this","time","ms","Math","floor","slice","seconds","minutes","hours","className","Container","Paper","formatTime","Fab","color","onClick","IconButton","fontSize","React","Component","CountdownInput","isDisabled","onHoursChange","onMinutesChange","onSecondsChange","onClearInputChange","TextField","id","label","value","onChange","type","placeholder","margin","disabled","Tooltip","title","placement","enterDelay","Countdown","delta","duration","hasFinished","handleClearInput","toMilliseconds","unit","handleSeconds","e","target","msSeconds","msMinutes","msHours","handleMinutes","handleHours","toString","length","divClassName","createMuiTheme","palette","primary","main","blue","secondary","TabPanel","children","index","other","Typography","component","role","hidden","Box","useStyles","makeStyles","theme","root","flexGrow","width","height","backgroundColor","TabBar","classes","useState","setValue","ThemeProvider","AppBar","position","Tabs","topBar","event","newValue","indicatorColor","textColor","centered","Tab","icon","Hidden","xsDown","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b06233e0.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Timer.css';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowRoundedIcon from '@material-ui/icons/PlayArrowRounded';\nimport PauseRoundedIcon from '@material-ui/icons/PauseRounded';\nimport ReplayRoundedIcon from '@material-ui/icons/ReplayRounded';\n\nclass Stopwatch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOn: false,\n      elapsedTime: 0\n    };\n  }\n\n  handleStart = () => {\n    this.setState(state => {\n      const startTime = Date.now() - state.elapsedTime;\n      this.timer = setInterval(() => {\n        this.setState({ elapsedTime: Date.now() - startTime });\n      }, 10);\n      return { isOn: !state.isOn };\n    });\n  };\n\n  handleStop = () => {\n    clearInterval(this.timer)\n    this.setState(state => {\n      return { isOn: !state.isOn };\n    });\n  };\n\n  handleReset = () => {\n    this.setState({ isOn: false, elapsedTime: 0 });\n    clearInterval(this.timer);\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  formatTime(time) {\n    let ms = ('0' + Math.floor(time / 10) % 1000).slice(-2);\n    let seconds = ('0' + Math.floor(time / 1000) % 60).slice(-2);\n    let minutes = ('0' + Math.floor(time / 60000) % 60).slice(-2);\n    let hours = ('0' + Math.floor(time / 3600000) % 24).slice(-2);\n    return (\n      <div className='time-format'>\n        <p className='hh-mm-ss'>{hours}:{minutes}:{seconds}</p>\n        <p className='ms'>.{ms}</p>\n      </div>\n    )\n  }\n\n  render() {\n    const { isOn, elapsedTime } = this.state;\n\n    return (\n      <div className='container'>\n        <Container>\n          <Paper className=\"paper-time\">\n            {this.formatTime(elapsedTime)}\n            <div>\n              {!isOn &&\n                <Fab\n                  color='primary'\n                  onClick={this.handleStart}\n                >\n                  <PlayArrowRoundedIcon />\n                </Fab>\n              }\n              {isOn &&\n                <Fab\n                  color='primary'\n                  onClick={this.handleStop}\n                >\n                  <PauseRoundedIcon />\n                </Fab>\n              }\n              {!isOn && elapsedTime > 0 ?\n                <IconButton\n                  className=\"reset-btn\"\n                  color=\"default\"\n                  onClick={this.handleReset}\n                >\n                  <ReplayRoundedIcon fontSize=\"large\"/>\n                </IconButton>\n                :\n                null\n              }\n            </div>\n          </Paper>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function CountdownInput(props) {\r\n  const { hours, minutes, seconds, isDisabled, onHoursChange, onMinutesChange, onSecondsChange, onClearInputChange } = props;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TextField\r\n          id=\"hh-input\"\r\n          label=\"Hours\"\r\n          value={hours}\r\n          onChange={onHoursChange}\r\n          type=\"number\"\r\n          placeholder=\"00\"\r\n          margin=\"normal\"\r\n          disabled={isDisabled}\r\n        />\r\n        <TextField\r\n          id=\"mm-input\"\r\n          label=\"Minutes\"\r\n          value={minutes}\r\n          onChange={onMinutesChange}\r\n          type=\"number\"\r\n          placeholder=\"00\"\r\n          margin=\"normal\"\r\n          disabled={isDisabled}\r\n        />\r\n        <TextField\r\n          id=\"ss-input\"\r\n          label=\"Seconds\"\r\n          value={seconds}\r\n          onChange={onSecondsChange}\r\n          type=\"number\"\r\n          placeholder=\"00\"\r\n          margin=\"normal\"\r\n          disabled={isDisabled}\r\n        />\r\n      </div>\r\n      <Tooltip title=\"Clear input\" placement=\"right\" enterDelay={500}> \r\n        <IconButton\r\n          onClick={onClearInputChange}\r\n          disabled={isDisabled}\r\n        >\r\n          <ClearRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport '../styles/Timer.css';\r\nimport TimeInput from './TimeInput';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayArrowRoundedIcon from '@material-ui/icons/PlayArrowRounded';\r\nimport PauseRoundedIcon from '@material-ui/icons/PauseRounded';\r\nimport ReplayRoundedIcon from '@material-ui/icons/ReplayRounded';\r\n\r\nclass Countdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOn: false,\r\n      hasFinished: false,\r\n      elapsedTime: 0,\r\n      seconds: 45,\r\n      minutes: '',\r\n      hours: '',\r\n      duration: 45000\r\n    };\r\n  }\r\n\r\n  handleStart = () => {\r\n    this.setState(state => {\r\n      const startTime = Date.now() - state.elapsedTime;\r\n      this.timer = setInterval(() => {\r\n        let delta = Date.now() - startTime;\r\n        if (delta >= state.duration) {\r\n          clearInterval(this.timer);\r\n          this.setState({\r\n            isOn: false,\r\n            hasFinished: true,\r\n            elapsedTime: state.duration\r\n          });\r\n        } else {\r\n          this.setState({ elapsedTime: delta });\r\n        }\r\n      }, 10);\r\n      return { isOn: !state.isOn };\r\n    });\r\n  };\r\n\r\n  handleStop = () => {\r\n    clearInterval(this.timer)\r\n    this.setState(state => {\r\n      return { isOn: !state.isOn };\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      isOn: false,\r\n      hasFinished: false,\r\n      elapsedTime: 0\r\n    });\r\n    clearInterval(this.timer);\r\n  };\r\n\r\n  handleClearInput = () => {\r\n    this.handleReset();\r\n    this.setState({\r\n      seconds: '',\r\n      minutes: '',\r\n      hours: '',\r\n      duration: 0\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  formatTime(time, hasFinished) {\r\n    let ms = ('0' + Math.floor(time / 10) % 1000).slice(-2);\r\n    let seconds = ('0' + Math.floor(time / 1000) % 60).slice(-2);\r\n    let minutes = ('0' + Math.floor(time / 60000) % 60).slice(-2);\r\n    let hours = Math.floor(time / 3600000); // mod 24 for days\r\n    hours = hours.toString().length < 2 ? '0' + hours : hours;\r\n\r\n    let divClassName = 'time-format';\r\n    if (hasFinished) {\r\n      divClassName += '-finished';\r\n    }\r\n\r\n    return (\r\n      <div className={divClassName}>\r\n        <p className='hh-mm-ss'>{hours}:{minutes}:{seconds}</p>\r\n        <p className='ms'>.{ms}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  toMilliseconds = (time, unit) => {\r\n    let ms = time;\r\n    if (unit === 'ss') { ms = time * 1000 }\r\n    if (unit === 'mm') { ms = time * 60 * 1000 }\r\n    if (unit === 'hh') { ms = time * 60 * 60 * 1000 }\r\n    return ms;\r\n  };\r\n\r\n  handleSeconds = (e) => {\r\n    this.handleReset();\r\n    let seconds = e.target.value;\r\n    if (seconds >= 0) {\r\n      let msSeconds = seconds * 1000;\r\n      this.setState(state => {\r\n        let msMinutes = this.toMilliseconds(state.minutes, 'mm');\r\n        let msHours = this.toMilliseconds(state.hours, 'hh');\r\n        let duration = msSeconds + msMinutes + msHours;\r\n        if (duration >= 3.6e9) { duration = 3.6e9 - 1e3 }\r\n        return { seconds: seconds, duration: duration };\r\n      });\r\n    }\r\n  };\r\n\r\n  handleMinutes = (e) => {\r\n    this.handleReset();\r\n    let minutes = e.target.value;\r\n    if (minutes >= 0) {\r\n      let msMinutes = minutes * 60 * 1000;\r\n      this.setState(state => {\r\n        let msSeconds = this.toMilliseconds(state.seconds, 'ss');\r\n        let msHours = this.toMilliseconds(state.hours, 'hh');\r\n        let duration = msSeconds + msMinutes + msHours;\r\n        if (duration >= 3.6e9) { duration = 3.6e9 - 1e3 }\r\n        return { minutes: minutes, duration: duration };\r\n      });\r\n    }\r\n  };\r\n\r\n  handleHours = (e) => {\r\n    this.handleReset();\r\n    let hours = e.target.value;\r\n    if (hours >= 0) {\r\n      let msHours = hours * 60 * 60 * 1000;\r\n      this.setState(state => {\r\n        let msSeconds = this.toMilliseconds(state.seconds, 'ss');\r\n        let msMinutes = this.toMilliseconds(state.minutes, 'mm');\r\n        let duration = msSeconds + msMinutes + msHours;\r\n        if (duration >= 3.6e9) { duration = 3.6e9 - 1e3 }\r\n        return { hours: hours, duration: duration };\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isOn, hasFinished, elapsedTime, hours, minutes, seconds, duration } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <Container>\r\n          <Paper className=\"paper-time\">\r\n            {this.formatTime(duration - elapsedTime, hasFinished)}\r\n            <div>\r\n              {!isOn && !hasFinished &&\r\n                <Fab\r\n                  color='primary'\r\n                  onClick={this.handleStart}\r\n                >\r\n                  <PlayArrowRoundedIcon />\r\n                </Fab>\r\n              }\r\n              {isOn &&\r\n                <Fab\r\n                  color='primary'\r\n                  onClick={this.handleStop}\r\n                >\r\n                  <PauseRoundedIcon />\r\n                </Fab>\r\n              }\r\n              {!isOn && elapsedTime > 0 ?\r\n                <IconButton\r\n                  className=\"reset-btn\"\r\n                  color=\"default\"\r\n                  onClick={this.handleReset}\r\n                >\r\n                  <ReplayRoundedIcon fontSize=\"large\" />\r\n                </IconButton>\r\n                :\r\n                null\r\n              }\r\n              {hasFinished &&\r\n                <Fab\r\n                  color='primary'\r\n                  onClick={this.handleReset}\r\n                >\r\n                  <ReplayRoundedIcon />\r\n                </Fab>\r\n              }\r\n            </div>\r\n          </Paper>\r\n        </Container>\r\n        <Container>\r\n          <TimeInput\r\n            hours={hours}\r\n            minutes={minutes}\r\n            seconds={seconds}\r\n            isDisabled={isOn}\r\n            onHoursChange={this.handleHours}\r\n            onMinutesChange={this.handleMinutes}\r\n            onSecondsChange={this.handleSeconds}\r\n            onClearInputChange={this.handleClearInput}\r\n          />\r\n        </Container>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countdown;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[500],\r\n    },\r\n    secondary: {\r\n      main: \"#fff\"\r\n    },\r\n  },\r\n});","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Stopwatch from './Stopwatch';\r\nimport Countdown from './Countdown';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { ThemeProvider } from '@material-ui/core/styles/';\r\nimport theme from '../themes/theme';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`tabpanel-${index}`}\r\n      {...other}\r\n    >\r\n      <Box >{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    height: '100vh',\r\n    backgroundColor: \"whitesmoke\" //theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nexport default function TabBar() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"secondary\">\r\n          <Tabs\r\n            className={classes.topBar}\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab className={classes.icon} icon={<TimerIcon />} label={<Hidden xsDown>STOPWATCH</Hidden>} />\r\n            <Tab className={classes.icon} icon={<HourglassEmptyRoundedIcon />} label={<Hidden xsDown>COUNTDOWN</Hidden>} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={value} index={0}>\r\n          <Stopwatch />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <Countdown />\r\n        </TabPanel>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}","import React from 'react';\r\nimport TabView from './components/TabView';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <TabView />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}